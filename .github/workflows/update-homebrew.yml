name: Update Homebrew Formula

on:
  release:
    types: [published, released]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update (e.g., v0.9.5)'
        required: true
        type: string
      darwin_amd64_sha:
        description: 'SHA256 for macOS Intel binary'
        required: false
        type: string
      darwin_arm64_sha:
        description: 'SHA256 for macOS ARM64 binary'
        required: false
        type: string
  workflow_call:
    inputs:
      version:
        description: 'Version to update (e.g., v0.9.5)'
        required: true
        type: string

permissions:
  contents: write
  actions: read

jobs:
  update-homebrew-tap:
    name: Update Homebrew Tap
    runs-on: macos-latest

    steps:
    - name: Checkout main repo
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get release info
      id: release_info
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
          DARWIN_AMD64_SHA="${{ github.event.inputs.darwin_amd64_sha }}"
          DARWIN_ARM64_SHA="${{ github.event.inputs.darwin_arm64_sha }}"
        elif [ "${{ github.event_name }}" = "workflow_call" ]; then
          VERSION="${{ inputs.version }}"
          DARWIN_AMD64_SHA=""
          DARWIN_ARM64_SHA=""
        else
          VERSION="${{ github.event.release.tag_name }}"

          # Download checksums file from release
          CHECKSUMS_URL="https://github.com/oiahoon/termonaut/releases/download/${VERSION}/termonaut-${VERSION#v}-checksums.txt"
          curl -sSL "$CHECKSUMS_URL" -o checksums.txt

          # Extract SHA256 values
          DARWIN_AMD64_SHA=$(grep "darwin-amd64" checksums.txt | cut -d' ' -f1)
          DARWIN_ARM64_SHA=$(grep "darwin-arm64" checksums.txt | cut -d' ' -f1)
        fi

        # If SHA values are not provided and we can't get them, try to fetch from release
        if [ -z "$DARWIN_AMD64_SHA" ] || [ -z "$DARWIN_ARM64_SHA" ]; then
          echo "‚ö†Ô∏è SHA256 values not found, will be calculated from binaries"

          # Download binaries to calculate SHA256
          AMD64_URL="https://github.com/oiahoon/termonaut/releases/download/${VERSION}/termonaut-${VERSION#v}-darwin-amd64"
          ARM64_URL="https://github.com/oiahoon/termonaut/releases/download/${VERSION}/termonaut-${VERSION#v}-darwin-arm64"

          echo "üì• Downloading binaries for SHA256 calculation..."
          curl -sSL "$AMD64_URL" -o termonaut-darwin-amd64 || echo "‚ö†Ô∏è Failed to download AMD64 binary"
          curl -sSL "$ARM64_URL" -o termonaut-darwin-arm64 || echo "‚ö†Ô∏è Failed to download ARM64 binary"

          if [ -f "termonaut-darwin-amd64" ]; then
            DARWIN_AMD64_SHA=$(shasum -a 256 termonaut-darwin-amd64 | cut -d' ' -f1)
          else
            DARWIN_AMD64_SHA="0000000000000000000000000000000000000000000000000000000000000000"
            echo "‚ö†Ô∏è Using placeholder SHA256 for AMD64"
          fi

          if [ -f "termonaut-darwin-arm64" ]; then
            DARWIN_ARM64_SHA=$(shasum -a 256 termonaut-darwin-arm64 | cut -d' ' -f1)
          else
            DARWIN_ARM64_SHA="0000000000000000000000000000000000000000000000000000000000000000"
            echo "‚ö†Ô∏è Using placeholder SHA256 for ARM64"
          fi
        fi

        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "VERSION_NO_V=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "DARWIN_AMD64_SHA=${DARWIN_AMD64_SHA}" >> $GITHUB_OUTPUT
        echo "DARWIN_ARM64_SHA=${DARWIN_ARM64_SHA}" >> $GITHUB_OUTPUT

        echo "Updating to version: ${VERSION}"
        echo "macOS Intel SHA256: ${DARWIN_AMD64_SHA}"
        echo "macOS ARM64 SHA256: ${DARWIN_ARM64_SHA}"

    - name: Checkout homebrew-termonaut repo
      uses: actions/checkout@v4
      with:
        repository: oiahoon/homebrew-termonaut
        token: ${{ secrets.HOMEBREW_TAP_TOKEN || secrets.GITHUB_TOKEN }}
        path: homebrew-tap
      continue-on-error: true

    - name: Update termonaut.rb formula
      if: hashFiles('homebrew-tap') != ''
      run: |
        VERSION="${{ steps.release_info.outputs.VERSION }}"
        VERSION_NO_V="${{ steps.release_info.outputs.VERSION_NO_V }}"
        DARWIN_AMD64_SHA="${{ steps.release_info.outputs.DARWIN_AMD64_SHA }}"
        DARWIN_ARM64_SHA="${{ steps.release_info.outputs.DARWIN_ARM64_SHA }}"

        if [ -d "homebrew-tap" ]; then
          echo "üìÅ Updating external homebrew-termonaut repository"
          cd homebrew-tap
        else
          echo "‚ö†Ô∏è External repository not available, skipping external update"
          exit 0
        fi

        # Create updated formula using a safer approach
        echo "class Termonaut < Formula" > termonaut.rb
        echo "  desc \"Gamified terminal productivity tracker with XP, achievements, and GitHub integration\"" >> termonaut.rb
        echo "  homepage \"https://github.com/oiahoon/termonaut\"" >> termonaut.rb
        echo "  version \"${VERSION_NO_V}\"" >> termonaut.rb
        echo "  license \"MIT\"" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "  on_macos do" >> termonaut.rb
        echo "    on_intel do" >> termonaut.rb
        echo "      url \"https://github.com/oiahoon/termonaut/releases/download/${VERSION}/termonaut-${VERSION_NO_V}-darwin-amd64\"" >> termonaut.rb
        echo "      sha256 \"${DARWIN_AMD64_SHA}\"" >> termonaut.rb
        echo "    end" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "    on_arm do" >> termonaut.rb
        echo "      url \"https://github.com/oiahoon/termonaut/releases/download/${VERSION}/termonaut-${VERSION_NO_V}-darwin-arm64\"" >> termonaut.rb
        echo "      sha256 \"${DARWIN_ARM64_SHA}\"" >> termonaut.rb
        echo "    end" >> termonaut.rb
        echo "  end" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "  def install" >> termonaut.rb
        echo "    if OS.mac? && Hardware::CPU.intel?" >> termonaut.rb
        echo "      bin.install \"termonaut-${VERSION_NO_V}-darwin-amd64\" => \"termonaut\"" >> termonaut.rb
        echo "    elsif OS.mac? && Hardware::CPU.arm?" >> termonaut.rb
        echo "      bin.install \"termonaut-${VERSION_NO_V}-darwin-arm64\" => \"termonaut\"" >> termonaut.rb
        echo "    end" >> termonaut.rb
        echo "  end" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "  def caveats" >> termonaut.rb
        echo "    <<~EOS" >> termonaut.rb
        echo "      üöÄ Termonaut has been installed successfully!" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "      To get started:" >> termonaut.rb
        echo "      1. Initialize shell integration:" >> termonaut.rb
        echo "         termonaut advanced shell install" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "      2. Restart your terminal or run:" >> termonaut.rb
        echo "         source ~/.bashrc  # or ~/.zshrc" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "      3. Start tracking your productivity:" >> termonaut.rb
        echo "         termonaut stats" >> termonaut.rb
        echo "         termonaut tui" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "      4. Set up GitHub integration (optional):" >> termonaut.rb
        echo "         termonaut github auth" >> termonaut.rb
        echo "         termonaut github sync now" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "      üìñ Documentation: https://github.com/oiahoon/termonaut" >> termonaut.rb
        echo "      üêõ Issues: https://github.com/oiahoon/termonaut/issues" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "      Happy terminal productivity tracking! üéØ" >> termonaut.rb
        echo "    EOS" >> termonaut.rb
        echo "  end" >> termonaut.rb
        echo "" >> termonaut.rb
        echo "  test do" >> termonaut.rb
        echo "    assert_match \"${VERSION_NO_V}\", shell_output(\"\#{bin}/termonaut version\")" >> termonaut.rb
        echo "  end" >> termonaut.rb
        echo "end" >> termonaut.rb

    - name: Commit and push to homebrew-termonaut
      if: hashFiles('homebrew-tap') != ''
      run: |
        VERSION="${{ steps.release_info.outputs.VERSION }}"

        if [ -d "homebrew-tap" ]; then
          echo "üìÅ Committing to external homebrew-termonaut repository"
          cd homebrew-tap

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add termonaut.rb

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "üìã No changes to commit in external repository"
          else
            git commit -m "üç∫ Update Termonaut formula to ${VERSION}

            - Updated version to ${VERSION#v}
            - Updated macOS Intel and ARM64 SHA256 checksums
            - Automated update via GitHub Actions from main repo

            Release: https://github.com/oiahoon/termonaut/releases/tag/${VERSION}"

            git push
            echo "‚úÖ Successfully updated external homebrew-termonaut repository"
          fi
        else
          echo "‚ö†Ô∏è External repository not available, skipping external push"
        fi

    - name: Update local Formula (backup)
      run: |
        VERSION="${{ steps.release_info.outputs.VERSION }}"
        VERSION_NO_V="${{ steps.release_info.outputs.VERSION_NO_V }}"
        DARWIN_AMD64_SHA="${{ steps.release_info.outputs.DARWIN_AMD64_SHA }}"
        DARWIN_ARM64_SHA="${{ steps.release_info.outputs.DARWIN_ARM64_SHA }}"

        # Also update the local Formula as backup using the same safe approach
        echo "class Termonaut < Formula" > Formula/termonaut.rb
        echo "  desc \"Gamified terminal productivity tracker with XP, achievements, and GitHub integration\"" >> Formula/termonaut.rb
        echo "  homepage \"https://github.com/oiahoon/termonaut\"" >> Formula/termonaut.rb
        echo "  version \"${VERSION_NO_V}\"" >> Formula/termonaut.rb
        echo "  license \"MIT\"" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "  on_macos do" >> Formula/termonaut.rb
        echo "    on_intel do" >> Formula/termonaut.rb
        echo "      url \"https://github.com/oiahoon/termonaut/releases/download/${VERSION}/termonaut-${VERSION_NO_V}-darwin-amd64\"" >> Formula/termonaut.rb
        echo "      sha256 \"${DARWIN_AMD64_SHA}\"" >> Formula/termonaut.rb
        echo "    end" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "    on_arm do" >> Formula/termonaut.rb
        echo "      url \"https://github.com/oiahoon/termonaut/releases/download/${VERSION}/termonaut-${VERSION_NO_V}-darwin-arm64\"" >> Formula/termonaut.rb
        echo "      sha256 \"${DARWIN_ARM64_SHA}\"" >> Formula/termonaut.rb
        echo "    end" >> Formula/termonaut.rb
        echo "  end" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "  def install" >> Formula/termonaut.rb
        echo "    if OS.mac? && Hardware::CPU.intel?" >> Formula/termonaut.rb
        echo "      bin.install \"termonaut-${VERSION_NO_V}-darwin-amd64\" => \"termonaut\"" >> Formula/termonaut.rb
        echo "    elsif OS.mac? && Hardware::CPU.arm?" >> Formula/termonaut.rb
        echo "      bin.install \"termonaut-${VERSION_NO_V}-darwin-arm64\" => \"termonaut\"" >> Formula/termonaut.rb
        echo "    end" >> Formula/termonaut.rb
        echo "  end" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "  def caveats" >> Formula/termonaut.rb
        echo "    <<~EOS" >> Formula/termonaut.rb
        echo "      üöÄ Termonaut has been installed successfully!" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "      To get started:" >> Formula/termonaut.rb
        echo "      1. Initialize shell integration:" >> Formula/termonaut.rb
        echo "         termonaut advanced shell install" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "      2. Restart your terminal or run:" >> Formula/termonaut.rb
        echo "         source ~/.bashrc  # or ~/.zshrc" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "      3. Start tracking your productivity:" >> Formula/termonaut.rb
        echo "         termonaut stats" >> Formula/termonaut.rb
        echo "         termonaut tui" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "      4. Set up GitHub integration (optional):" >> Formula/termonaut.rb
        echo "         termonaut github auth" >> Formula/termonaut.rb
        echo "         termonaut github sync now" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "      üìñ Documentation: https://github.com/oiahoon/termonaut" >> Formula/termonaut.rb
        echo "      üêõ Issues: https://github.com/oiahoon/termonaut/issues" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "      Happy terminal productivity tracking! üéØ" >> Formula/termonaut.rb
        echo "    EOS" >> Formula/termonaut.rb
        echo "  end" >> Formula/termonaut.rb
        echo "" >> Formula/termonaut.rb
        echo "  test do" >> Formula/termonaut.rb
        echo "    assert_match \"${VERSION_NO_V}\", shell_output(\"\#{bin}/termonaut version\")" >> Formula/termonaut.rb
        echo "  end" >> Formula/termonaut.rb
        echo "end" >> Formula/termonaut.rb

        git add Formula/termonaut.rb

        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "üìã No changes to commit in local Formula"
        else
          git commit -m "üç∫ Sync Homebrew formula with tap repo ${VERSION}"
          echo "‚úÖ Successfully updated local Formula backup"
        fi

    - name: Verify formula
      run: |
        echo "üß™ Verifying Homebrew formula syntax..."

        # Simple syntax validation without trying to install
        if [ -d "homebrew-tap" ]; then
          echo "üîç Validating external tap formula syntax..."
          cd homebrew-tap
          # Just check if the file is valid Ruby syntax
          ruby -c termonaut.rb && echo "‚úÖ External formula syntax is valid" || echo "‚ö†Ô∏è External formula syntax check failed"
          cd ..
        fi

        if [ -f "Formula/termonaut.rb" ]; then
          echo "üîç Validating local formula syntax..."
          # Just check if the file is valid Ruby syntax
          ruby -c Formula/termonaut.rb && echo "‚úÖ Local formula syntax is valid" || echo "‚ö†Ô∏è Local formula syntax check failed"
        fi

        echo "‚úÖ Formula verification completed!"
        echo "üìã Updated:"
        if [ -d "homebrew-tap" ]; then
          echo "  ‚úÖ oiahoon/homebrew-termonaut/termonaut.rb (main tap)"
          echo "  üöÄ Install with: brew install oiahoon/termonaut/termonaut"
        else
          echo "  ‚ö†Ô∏è External tap update skipped (no access token)"
        fi
        echo "  ‚úÖ Formula/termonaut.rb (local backup)"
        echo "  üöÄ Install with: brew install Formula/termonaut.rb"

  update-local-formula:
    name: Update Local Formula (Fallback)
    runs-on: ubuntu-latest
    needs: [update-homebrew-tap]
    if: failure()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update local formula as fallback
      run: |
        echo "‚ö†Ô∏è Homebrew tap update failed, updating local formula as fallback"

        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        elif [ "${{ github.event_name }}" = "workflow_call" ]; then
          VERSION="${{ inputs.version }}"
        else
          VERSION="${{ github.event.release.tag_name }}"
        fi

        echo "Updating local Formula/termonaut.rb for version ${VERSION}"
        echo "Users can install with: brew install Formula/termonaut.rb"

        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        git add Formula/termonaut.rb
        git commit -m "üç∫ Update local Homebrew formula to ${VERSION} (tap update failed)" || echo "No changes to commit"
        git push